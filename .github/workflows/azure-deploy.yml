name: Build, Test and Deploy to Azure

on:
  push:
    branches:
      - master

env:
  ACR_REGISTRY: ubiguregistry.azurecr.io
  APP_NAME: ubigu-exercise
  RESOURCE_GROUP: ubigu-exercise

jobs:
#   test:
#     name: Test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'
#           cache: 'npm'

#       - name: Cache Cypress binary
#         uses: actions/cache@v3
#         id: cypress-cache
#         with:
#           path: ~/.cache/Cypress
#           key: cypress-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             cypress-${{ runner.os }}-

#       # Start only the client service since we're just testing the frontend
#       - name: Start frontend service
#         run: |
#           docker compose up -d client
#           docker compose ps
#           echo "Waiting for frontend to initialize..."
#           sleep 15

#       # Run Cypress tests against the frontend only
#       - name: Cypress run
#         uses: cypress-io/github-action@v5
#         with:
#           spec: cypress/e2e/hedgehog-form.cy.js
#           wait-on: 'http://localhost:8080'
#           wait-on-timeout: 60
#           install: true
  build-and-deploy:
    name: Build and Deploy
    # needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker-container
        buildkitd-flags: --debug
        install: true

    - name: Show Buildx builders
      run: docker buildx ls

    - name: Debug GitHub Context
      run: |
        echo "Running on branch: ${{ github.ref }}"
        echo "ACR_REGISTRY value: ${{ env.ACR_REGISTRY }}"
        echo "APP_NAME value: ${{ env.APP_NAME }}"

    - name: Debug AZURE_CREDENTIALS
      run: echo "${{ secrets.AZURE_CREDENTIALS }}"

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Set up Docker layer caching
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.ACR_REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}, ${{ env.ACR_REGISTRY }}/${{ env.APP_NAME }}:latest

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APP_NAME }}
        images: ${{ env.ACR_REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}
