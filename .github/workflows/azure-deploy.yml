name: Build, Test and Deploy to Azure

on:
  push:
    branches:
      - master

env:
  ACR_REGISTRY: ubiguregistry.azurecr.io
  APP_NAME: ubigu-exercise
  RESOURCE_GROUP: ubigu-exercise

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start Docker services with debug logs
        run: |
          docker compose config
          docker compose up -d
          docker compose ps
          echo "Waiting for services to initialize..."
          sleep 30
          docker compose logs

      - name: Check database initialization
        run: |
          docker compose exec -T db psql -U db_dev_user -d db_dev -c "\dt" || echo "Cannot list tables!"

      - name: Check database connection
        run: |
          docker compose exec -T db psql -U db_dev_user -d db_dev -c "SELECT 1" || echo "DB connection failed!"
          docker compose exec -T server curl -f http://localhost:3003/api/v1/health || echo "Server health check failed!"

      - name: Inspect network connectivity between containers
        run: |
          echo "Testing server -> db connectivity:"
          docker compose exec -T server curl -v db:5432 || echo "Server can't reach DB!"
          echo "Testing network configuration:"
          docker network ls
          docker network inspect $(docker network ls --filter name=ubigu-exercise --format "{{.ID}}")

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          spec: cypress/e2e/hedgehog-form.cy.js
          wait-on: 'http://localhost:8080, http://localhost:3003/api/v1/health'
          wait-on-timeout: 120

  build-and-deploy:
    name: Build and Deploy
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Debug GitHub Context
      run: |
        echo "Running on branch: ${{ github.ref }}"
        echo "ACR_REGISTRY value: ${{ env.ACR_REGISTRY }}"
        echo "APP_NAME value: ${{ env.APP_NAME }}"

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.ACR_REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}, ${{ env.ACR_REGISTRY }}/${{ env.APP_NAME }}:latest

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APP_NAME }}
        images: ${{ env.ACR_REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}

    - name: Run database migrations
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az webapp ssh --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.APP_NAME }} --command "npm run db-migrate:prod"
